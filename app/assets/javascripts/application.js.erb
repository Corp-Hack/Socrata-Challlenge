// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require bootstrap
//= require_tree .

//jQuery to collapse the navbar on scroll
$(window).scroll(function() {
    if ($(".navbar").offset().top > 50) {
        $(".navbar-fixed-top").addClass("top-nav-collapse");
    } else {
        $(".navbar-fixed-top").removeClass("top-nav-collapse");
    }
});

//jQuery for page scrolling feature - requires jQuery Easing plugin
$(function() {
    $('a.page-scroll').bind('click', function(event) {
        var $anchor = $(this);
        $('html, body').stop().animate({
            scrollTop: $($anchor.attr('href')).offset().top
        }, 1500, 'easeInOutExpo');
        event.preventDefault();
    });
});


/* activate scrollspy menu */
$('body').scrollspy({
  target: '#navbar-collapsible',
  offset: 52
});

/* smooth scrolling sections */
$('a[href*=#]:not([href=#])').click(function() {
    if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {
      var target = $(this.hash);
      target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
      if (target.length) {
        $('html,body').animate({
          scrollTop: target.offset().top - 50
        }, 800);

        if (this.hash=="#section1") {
            $('.scroll-up').hide();
        }
        else {
            $('.scroll-up').show();
        }


        // activte animations in this section
        target.find('.animate').delay(1200).addClass("animated");
        setTimeout(function(){
            target.find('.animated').removeClass("animated");
        },2000);

        return false;
      }
    }
});
   
function initMap() {
  <% Destination.all.each_with_index do |dest, index| %>
  var myLatLng<%= index %> = {lat: <%= dest.longitude %>, lng: <%= dest.latitude %>};
  <% end %>
  var directionsService = new google.maps.DirectionsService;
  var directionsDisplay = new google.maps.DirectionsRenderer({suppressMarkers: true});
  var map = new google.maps.Map(document.getElementById('map'), {
    zoom: 7,
    scrollwheel: false,
    center: {lat: 39.7910, lng: -86.1480}
  });



  function success(position) {

  window.coords = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

  var image = 'assets/star-4.png';
  var marker = new google.maps.Marker({
      position: coords,
      map: map,
      title:"You are here!",
      center: coords,
      icon: image
  });
}

  if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(success);
  } else {
    error('Geo Location is not supported');
  }

  var geocoder = new google.maps.Geocoder();

  document.getElementById('submit').addEventListener('click', function() {
    geocodeAddress(geocoder, map);
  });


  function geocodeAddress(geocoder, resultsMap) {
  var address = document.getElementById('address').value;
  geocoder.geocode({'address': address}, function(results, status) {
    if (status === google.maps.GeocoderStatus.OK) {
      resultsMap.setCenter(results[0].geometry.location);
      var image = 'assets/star-5.png';
      var marker = new google.maps.Marker({
        map: resultsMap,
        position: results[0].geometry.location,
        icon: image
      });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
  }

  directionsDisplay.setMap(map);
  directionsDisplay.setPanel(document.getElementById('right-panel'));

  var control = document.getElementById('floating-panel');
  control.style.display = 'block';
  map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);


  <% Destination.all.each_with_index do |dest, index| %>
  var image = 'assets/star-3.png';
  var marker<%= index %> = new google.maps.Marker({
    map: map,
    position: myLatLng<%= index %>,
    title: "<%= dest.site %>",
    icon: image
  });
  var markerHeading<%= index %> = "<%= dest.site %>"
  var markerLocation<%= index %> = "<%= dest.location %>"

  var contentString<%= index %> = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<img style="height:140px; width:200px;" class="img-thumbnail" src="<%= dest.picture_url %>"></img>'+
      '<h1 id="firstHeading" style="font-size:15px" class="firstHeading">' + markerHeading<%= index %> + '</h1>' +
      '<div id="bodyContent">'+
      '<p><%= dest.activities %></p>'+
      '<p>Phone Number: <%= dest.phone %>'+
      '</div>'+
      '</div>';

  var infowindow<%= index %> = new google.maps.InfoWindow({
    content: contentString<%= index %>,
    maxWidth: 200
  });

  marker<%= index %>.addListener('click', function() {
   infowindow<%= index %>.open(map, marker<%= index %>);
  });
  <% end %>



  var onChangeHandler = function() {
    calculateAndDisplayRoute(directionsService, directionsDisplay);
  };
  document.getElementById('submit').addEventListener('change', onChangeHandler);
  document.getElementById('end').addEventListener('change', onChangeHandler);
}

function calculateAndDisplayRoute(directionsService, directionsDisplay) {
  var start = window.coords;
  var end = document.getElementById('end').value;
  directionsService.route({
    origin: start,
    destination: end,
    travelMode: google.maps.TravelMode.DRIVING
  }, function(response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}
